Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

class Solution(object):
    def firstUniqChar(self, s):
        """
        :type s: str
        :rtype: int
        """
        

        charCounter = {}  # Dictionary for counting each char
        charOrder = []

        for i, char in enumerate(s):  # Use enumerate to get indices directly
            if char not in charCounter:
                charCounter[char] = 0 
                charOrder.append(i)  # Store the index, not the character
            charCounter[char] += 1

        # Find the index of the first unique character
        for i in charOrder:  # Iterate over the indices directly
            if charCounter[s[i]] == 1:  # Access the character using the index
                return i

        return -1


 
