You are given an integer array prices where prices[i] is the price of a given stock on the ith day.

On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.

Find and return the maximum profit you can achieve.


class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        print(prices) # lets know what we're working with first. 
        
        if not prices:   #if array empty/null cancel function.
            return 0 
        
        profit = 0 #initialize default profit. 
        
        for i in range(1, len(prices)): #for the index in range of the array size
            if prices[i] > prices[i - 1]: #if the current index > previous index (looped over each index)
                profit += prices[i] - prices[i - 1] 
                # profit = price of the current index - price of the previous index. 
        return profit
