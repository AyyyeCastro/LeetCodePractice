Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.

class Solution(object):
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """

        
        nums1Counter = {}
        nums2Counter = {}
        
        for value in nums1:
            if value in nums1Counter:
                nums1Counter[value] += 1
            else:
                nums1Counter[value] = 1
        for value in nums2:
            if value in nums2Counter:
                nums2Counter[value] += 1
            else:
                nums2Counter[value] = 1      
                
        result = []
        for value, count in nums1Counter.items():  # Iterate through keys in nums1Counter
            if value in nums2Counter:  # Check if the key ALSO exists in nums2Counter
                minCount = min(count, nums2Counter[value])  # Find minimum count
                result.extend([value] * minCount)  # Add element with minimum count (value multiplied by the time it shows)

        
        return result

    
      
            
        
     
        
       
            

        
               
